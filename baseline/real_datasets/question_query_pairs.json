[
    {
        "question": "我们有多少歌手？",
        "query": "SELECT count(*) FROM singer"
    },
    {
        "question": "歌手的总数是多少？",
        "query": "SELECT count(*) FROM singer"
    },
    {
        "question": "按歌手年龄从最大到最小，显示每个歌手的姓名、国家、年龄。",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC"
    },
    {
        "question": "按年龄降序，每个歌手的名字、国家、年龄是什么？",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC"
    },
    {
        "question": "法国所有歌手的平均年龄、最小年龄和最大年龄是多少？",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  '法国'"
    },
    {
        "question": "所有法国歌手的平均年龄、最小年龄和最大年龄是多少？",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  '法国'"
    },
    {
        "question": "显示最年轻歌手的歌曲的名字和发行年份。",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1"
    },
    {
        "question": "最年轻歌手的所有歌曲的名字和发行年是多少？",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1"
    },
    {
        "question": "20岁以上的歌手来自哪些不同国家？",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20"
    },
    {
        "question": "哪些国家有20岁以上的歌手？",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20"
    },
    {
        "question": "显示所有不同国家和每个国家的歌手数量。",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country"
    },
    {
        "question": "每个国家有多少歌手？",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country"
    },
    {
        "question": "列出高于平均年龄的歌手的所有歌名。",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)"
    },
    {
        "question": "年龄高于平均年龄的歌手的所有歌名有哪些?",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)"
    },
    {
        "question": "显示容量在5000到10000之间的所有体育场馆的位置和名称。",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000"
    },
    {
        "question": "容量在5000到10000之间的所有体育场的位置和名称是什么？",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000"
    },
    {
        "question": "所有体育场的平均容量和最大容量是多少？",
        "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium"
    },
    {
        "question": "所有体育场的平均容量和最大容量是多少？",
        "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium"
    },
    {
        "question": "平均到场率最高的体育场名称和容量是多少？",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"
    },
    {
        "question": "平均到场率最高的体育场的名称是什么，有多少容量？",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"
    },
    {
        "question": "2014或2015年有多少演唱会？",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015"
    },
    {
        "question": "有多少演唱会在2014或2015年？",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015"
    },
    {
        "question": "显示体育场的名称和每个体育场举办音乐会的数量。",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id"
    },
    {
        "question": "每个体育场有多少场音乐会？",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id"
    },
    {
        "question": "在2014年或之后举办的音乐会最多的体育场的名称和容量。",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "在2013年以后音乐会最多的体育场名称和容量是多少？",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪一年音乐会最多？",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "音乐会最多的是哪一年？",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "没有音乐会的体育场的名称。",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)"
    },
    {
        "question": "没有音乐会的体育场名称是什么？",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)"
    },
    {
        "question": "显示40岁以上和30岁以下的歌手所来自的国家。",
        "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30"
    },
    {
        "question": "显示除了2014年有音乐会的场馆外的所有体育场的名称。",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014"
    },
    {
        "question": "2014年没有举办音乐会的所有体育场名称是什么？",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014"
    },
    {
        "question": "显示所有音乐会的名称和主题以及每场音乐会的歌手人数。",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id"
    },
    {
        "question": "每场演唱会的名称、主题和歌手数量是多少？",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id"
    },
    {
        "question": "列出歌手的名字和每个歌手的演唱会的次数。",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"
    },
    {
        "question": "每个歌手的名字和演唱会的数量是多少？",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"
    },
    {
        "question": "列出2014年音乐会上所有歌手的名字。",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014"
    },
    {
        "question": "2014年在演唱会上演唱的歌手的名字是什么？",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014"
    },
    {
        "question": "有首歌名含有“你”的歌手的名字和国籍是什么？",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '你'"
    },
    {
        "question": "歌名中有“你”这个词的所有歌手的姓名和原籍国是什么？",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '你'"
    },
    {
        "question": "找出同时在2014年和2015年举办音乐会的场馆的名称和地点。",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
    },
    {
        "question": "在2014年和2015年同时举办音乐会的场馆名称和地点有哪些？",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
    },
    {
        "question": "找出有着最大容量的体育场举办的音乐会数量。",
        "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1"
    },
    {
        "question": "在容量最大的体育场里有多少场音乐会？",
        "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1"
    },
    {
        "question": "找出体重大于10的宠物的数量。",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10"
    },
    {
        "question": "有多少宠物的体重比10大？",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10"
    },
    {
        "question": "找到最年轻的狗的体重。",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "question": "最年轻的狗有多重？",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "question": "找出每种宠物的最大重量。列出最大重量和宠物类型。",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
    },
    {
        "question": "列出每种宠物的最大重量和类型。",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
    },
    {
        "question": "找出20岁以上学生拥有的宠物数量。",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
    },
    {
        "question": "年龄大于20岁的学生拥有多少宠物？",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
    },
    {
        "question": "找出由女学生（性别为“女”）养的宠物狗的数量。",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  '女' AND T3.pettype  =  '狗'"
    },
    {
        "question": "女学生养了多少只宠物狗？",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  '女' AND T3.pettype  =  '狗'"
    },
    {
        "question": "找出不同类型宠物的数量。",
        "query": "SELECT count(DISTINCT pettype) FROM pets"
    },
    {
        "question": "有多少种不同类型的宠物？",
        "query": "SELECT count(DISTINCT pettype) FROM pets"
    },
    {
        "question": "查找有猫狗宠物的学生的名字。",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫' OR T3.pettype  =  '狗'"
    },
    {
        "question": "每一个养猫或狗的学生的名字是什么？",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫' OR T3.pettype  =  '狗'"
    },
    {
        "question": "找出既有猫又有狗的学生的名字。",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '狗'"
    },
    {
        "question": "有猫又有狗的学生名字是什么？",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '狗'"
    },
    {
        "question": "找到没有宠物猫的学生的专业和年龄。",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫')"
    },
    {
        "question": "每个不养猫的学生都学什么专业？他们多大了？",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫')"
    },
    {
        "question": "找到没有宠物猫的学生的ID。",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫'"
    },
    {
        "question": "那些没有猫的学生的ID是什么？",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫'"
    },
    {
        "question": "找出有狗但没有猫的学生的名字和年龄。",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '狗' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫')"
    },
    {
        "question": "养狗但没有养猫的学生的名字是什么？",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '狗' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  '猫')"
    },
    {
        "question": "找出最年轻的宠物的类型和体重。",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "question": "最年轻的宠物是什么类型的，它的重量是多少？",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "question": "找出所有年龄大于1岁的宠物的ID和体重。",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
    },
    {
        "question": "每一个1岁以上的宠物的ID和体重是多少？",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
    },
    {
        "question": "找出每种宠物的平均年龄和最大年龄。",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "question": "每种宠物的平均年龄和最大年龄是多少？",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "question": "找到每种宠物类型的平均体重。",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "question": "每种宠物的平均体重是多少？",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "question": "找出有宠物的学生的名字和年龄。",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
    },
    {
        "question": "有宠物的学生有哪些不同的名字和年龄？",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
    },
    {
        "question": "找出有宠物而且姓为“琳”的学生的ID。",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  '琳'"
    },
    {
        "question": "那个姓“琳”而且有宠物的学生的ID是什么？",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  '琳'"
    },
    {
        "question": "找出每个有宠物的学生的ID和宠物数量。",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
    },
    {
        "question": "对于有宠物的学生，每个学生有多少宠物？",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
    },
    {
        "question": "找出拥有不止一只宠物的学生的名字和性别。",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
    },
    {
        "question": "所有拥有多只宠物的学生的名和性别是什么？",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
    },
    {
        "question": "找出有一只3岁猫的学生的姓氏。",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  '猫'"
    },
    {
        "question": "有一只3岁猫的学生的姓氏是什么？",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  '猫'"
    },
    {
        "question": "找出没有宠物的学生的平均年龄。",
        "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)"
    },
    {
        "question": "所有没有宠物的学生平均年龄是多少？",
        "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)"
    },
    {
        "question": "有多少大洲？",
        "query": "SELECT count(*) FROM CONTINENTS;"
    },
    {
        "question": "大洲的数量是多少？",
        "query": "SELECT count(*) FROM CONTINENTS;"
    },
    {
        "question": "每个洲有多少个国家？列出大洲ID、大洲名称和国家数目。",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"
    },
    {
        "question": "对于每个大洲，列出它的ID、名字和它有多少个国家？",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"
    },
    {
        "question": "列出了多少国家？",
        "query": "SELECT count(*) FROM COUNTRIES;"
    },
    {
        "question": "有多少国家存在？",
        "query": "SELECT count(*) FROM COUNTRIES;"
    },
    {
        "question": "每个汽车制造商生产多少种型号的汽车？列出制造商姓名，ID和号码。",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
    },
    {
        "question": "每个汽车制造商的全名，ID以及生产多少种型号的汽车？",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
    },
    {
        "question": "哪个车型的马力最小？",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"
    },
    {
        "question": "最小马力的汽车的型号是什么？",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"
    },
    {
        "question": "找出重量低于平均重量的汽车的型号。",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)"
    },
    {
        "question": "重量小于平均值的汽车的型号是什么？",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)"
    },
    {
        "question": "找出“1970”年生产汽车的制造商的名字。",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';"
    },
    {
        "question": "“1970”年生产过汽车的不同汽车制造商的名字是什么？",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';"
    },
    {
        "question": "找出最早一年生产的汽车的制造和生产时间？",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"
    },
    {
        "question": "最早生产汽车的制造商是什么，在哪一年？",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"
    },
    {
        "question": "1980年后生产出哪些不同车型？",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;"
    },
    {
        "question": "哪些不同的车型在1980年后被生产出来？",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;"
    },
    {
        "question": "每个大洲有多少汽车制造商？列出大洲名称和数量。",
        "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"
    },
    {
        "question": "每个大洲的名称是什么？每个大洲有多少汽车制造商？",
        "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"
    },
    {
        "question": "哪个国家拥有最多的汽车制造商？列出国家名称。",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"
    },
    {
        "question": "汽车制造商最多的国家叫什么名字？",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"
    },
    {
        "question": "每个制造商生产多少种车型？列出数量和制造商的全名。",
        "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;"
    },
    {
        "question": "每个制造商生产的车型数量是多少？每个制造商的ID和全名是什么？",
        "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;"
    },
    {
        "question": "“科迈罗”的加速度是多少？",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"
    },
    {
        "question": "“科迈罗”的加速度有多大？",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"
    },
    {
        "question": "法国有多少汽车制造商？",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  '法国';"
    },
    {
        "question": "法国的汽车制造商有多少？",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  '法国';"
    },
    {
        "question": "美国生产了多少款车？",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  '美国';"
    },
    {
        "question": "在美国生产的车型有多少？",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  '美国';"
    },
    {
        "question": "4缸汽车每加仑汽油能行驶的平均英里数是多少？",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"
    },
    {
        "question": "所有4缸汽车每加仑汽油能行驶的平均英里数是多少？",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"
    },
    {
        "question": "在1974年的8缸汽车的最小重量是多少？",
        "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;"
    },
    {
        "question": "1974年所生产的8缸汽车的最小重量是多少？",
        "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;"
    },
    {
        "question": "所有的制造商和汽车型号是什么？",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;"
    },
    {
        "question": "制造商和汽车型号是什么？",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;"
    },
    {
        "question": "哪些国家至少拥有一家汽车制造商？列出名称和ID。",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"
    },
    {
        "question": "拥有至少一家汽车制造商的所有国家的名称和ID是什么？",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"
    },
    {
        "question": "马力超过150的汽车的数量是多少？",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"
    },
    {
        "question": "有多少汽车的马力大于150？",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"
    },
    {
        "question": "每年汽车的平均重量是多少？",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"
    },
    {
        "question": "每年的平均重量和年份是多少？",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"
    },
    {
        "question": "欧洲哪些国家至少有3家汽车制造商？",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  '欧洲' GROUP BY T1.CountryName HAVING count(*)  >=  3;"
    },
    {
        "question": "拥有至少3家制造商的所有欧洲国家的名称是什么？",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  '欧洲' GROUP BY T1.CountryName HAVING count(*)  >=  3;"
    },
    {
        "question": "3缸的汽车型号的最大的马力和牌子是什么？",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "question": "3缸车型的最大马力是多少？是什么牌子的？",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "question": "哪种型号的车最省油？也就是说，每加仑汽油能行驶的英里数最大。",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;"
    },
    {
        "question": "最高MPG的汽车型号是什么？",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;"
    },
    {
        "question": "汽车在1980年之前的平均马力是多少？",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;"
    },
    {
        "question": "在1980之前生产的所有品牌汽车的平均马力是多少？",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;"
    },
    {
        "question": "“吉利”汽车的平均EDISL是多少？",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  '吉利';"
    },
    {
        "question": "所有“吉利”汽车的平均EDISCL是多少？",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  '吉利';"
    },
    {
        "question": "对于不同数量的气缸的车，最大加速度是多少？",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"
    },
    {
        "question": "不同气缸的车的最大加速度是多少？",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"
    },
    {
        "question": "哪种车型的汽车版本最多？",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "question": "什么型号的汽车有最多不同的版本？",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "question": "有多少辆车有4个以上的气缸？",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"
    },
    {
        "question": "4缸以上的汽车数量是多少？",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"
    },
    {
        "question": "1980年生产了多少辆车？",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"
    },
    {
        "question": "在1980年，多少辆车生产出来了？",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"
    },
    {
        "question": "全名为“一汽”的制造商生产了多少种车型？",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  '一汽';"
    },
    {
        "question": "名为“一汽”的汽车制造商生产的不同汽车型号是多少？",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  '一汽';"
    },
    {
        "question": "哪些制造商设计了超过3种车型？列出全名和ID。",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "question": "生产超过3种型号汽车的所有制造商的名称和ID是什么？",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "question": "哪些车型是“上汽”公司生产的，或者重量超过3500？",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  '上汽' OR T4.weight  >  3500;"
    },
    {
        "question": "“上汽”公司生产或重量超过3500的不同车型有哪些？",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  '上汽' OR T4.weight  >  3500;"
    },
    {
        "question": "哪一年生产的汽车重量不小于3000，也不超过4000？",
        "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;"
    },
    {
        "question": "有哪些年份既生产了重量小于4000的汽车，又生产了重量大于3000的汽车？",
        "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;"
    },
    {
        "question": "最大加速度的汽车的马力是多少？",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"
    },
    {
        "question": "加速度最大的汽车的马力是多少？",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"
    },
    {
        "question": "对于“吉利”车型来说，最小加速度的汽车有多少个气缸？",
        "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  '吉利' ORDER BY T1.accelerate ASC LIMIT 1;"
    },
    {
        "question": "加速度最小的“吉利”车型有多少个汽缸？",
        "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  '吉利' ORDER BY T1.accelerate ASC LIMIT 1;"
    },
    {
        "question": "有多少车比最大马力的汽车有更大的加速度？",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"
    },
    {
        "question": "加速度比马力最大的汽车更大的汽车有多少辆？",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"
    },
    {
        "question": "有多少国家拥有超过2家汽车制造商？",
        "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );"
    },
    {
        "question": "拥有超过2家汽车制造商的国家有多少？",
        "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );"
    },
    {
        "question": "有多少辆车超过6个汽缸？",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"
    },
    {
        "question": "超过6个气缸的汽车的数量是多少？",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"
    },
    {
        "question": "对于有4个汽缸的汽车，哪个型号的车的马力最大？",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "question": "哪种型号的四缸汽车的马力最大？",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "question": "在高于最低马力的车中，哪些没有超过3个汽缸？列出汽车制造商的ID和名称。",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;"
    },
    {
        "question": "在不是最小马力的汽车中，那些少于4个汽缸的汽车制造商的ID和名称是什么？",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;"
    },
    {
        "question": "8缸或1980年前生产的汽车每加仑汽油的最大里程是多少？",
        "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;"
    },
    {
        "question": "在1980年之前生产或8缸的汽车最大MPG是多少？",
        "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;"
    },
    {
        "question": "哪些型号的车比3500轻并且不是“广汽”制造？",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != '广汽';"
    },
    {
        "question": "不是“广汽”制造的车中，哪些型号的车比3500轻？",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != '广汽';"
    },
    {
        "question": "没有一个汽车制造商的国家的名字是什么？",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
    },
    {
        "question": "没有汽车制造商的国家的名字是什么？",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
    },
    {
        "question": "哪家汽车制造商生产至少2种型号的汽车和3种以上的汽车品牌？列出ID和制造商。",
        "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "question": "所有生产至少2种车型、生产超过3种汽车品牌的汽车制造商的ID和制造商是什么？",
        "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "question": "拥有3家以上汽车制造商或生产“荣威”车型的国家的ID和名称是什么？",
        "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  '荣威';"
    },
    {
        "question": "哪些国家有3种以上汽车制造商或生产“荣威”，它们的ID和名称是什么？",
        "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  '荣威';"
    },
    {
        "question": "“深圳航空公司”航空公司属于哪个国家？",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"深圳航空公司\""
    },
    {
        "question": "“深圳航空公司”航空公司隶属于哪个国家？",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"深圳航空公司\""
    },
    {
        "question": "航空公司“深圳航空公司”的缩写是什么？",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"深圳航空公司\""
    },
    {
        "question": "哪一个缩写对应于“深圳航空公司”航空公司？",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"深圳航空公司\""
    },
    {
        "question": "列出所有“美国”的航空公司的名字和缩写。",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"美国\""
    },
    {
        "question": "美国所有航空公司的航空公司名称和缩写是什么？",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"美国\""
    },
    {
        "question": "列出“拉萨”市的机场代码和名称。",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"拉萨\""
    },
    {
        "question": "给出与城市“拉萨”对应的机场代码和机场名称。",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"拉萨\""
    },
    {
        "question": "我们有多少家航空公司？",
        "query": "SELECT count(*) FROM AIRLINES"
    },
    {
        "question": "航空公司的总数是多少？",
        "query": "SELECT count(*) FROM AIRLINES"
    },
    {
        "question": "我们有多少个机场？",
        "query": "SELECT count(*) FROM AIRPORTS"
    },
    {
        "question": "返回机场的数量。",
        "query": "SELECT count(*) FROM AIRPORTS"
    },
    {
        "question": "我们有多少次航班？",
        "query": "SELECT count(*) FROM FLIGHTS"
    },
    {
        "question": "返回航班次的数量。",
        "query": "SELECT count(*) FROM FLIGHTS"
    },
    {
        "question": "哪家航空公司的缩写是“UAL”？",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\""
    },
    {
        "question": "给出缩写为“UAL”的航空公司。",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\""
    },
    {
        "question": "有多少航空公司来自美国？",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"美国\""
    },
    {
        "question": "返回美国航空公司的数量。",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"美国\""
    },
    {
        "question": "“东方”机场在哪个城市和哪个国家？",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"东方\""
    },
    {
        "question": "给出“东方”机场所属的城市和国家。",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"东方\""
    },
    {
        "question": "“AKO”机场的名称是什么？",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\""
    },
    {
        "question": "返回代号为“AKO”的机场名称。",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\""
    },
    {
        "question": "“哈尔滨”市的机场名称是什么？",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"哈尔滨\""
    },
    {
        "question": "在“哈尔滨”的机场名称是什么？",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"哈尔滨\""
    },
    {
        "question": "有多少航班从“长沙”出发？",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"长沙\""
    },
    {
        "question": "统计从“长沙”起飞的航班数。",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"长沙\""
    },
    {
        "question": "目的地是“天津”有多少航班？",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"天津\""
    },
    {
        "question": "统计到达“天津”的航班数。",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"天津\""
    },
    {
        "question": "从“哈尔滨”市起飞的有多少班次？",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "返回从“哈尔滨”起飞的航班数。",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "到“哈尔滨”市有多少班次？",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "返回抵达“哈尔滨”市的航班数量。",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "有多少航班从“哈尔滨”起飞，到达“西安”？",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"西安\" AND T3.City  =  \"哈尔滨\""
    },
    {
        "question": "从“哈尔滨”飞往“西安”有多少班机？",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"西安\" AND T3.City  =  \"哈尔滨\""
    },
    {
        "question": "“深圳航空公司”航空公司有多少航班？",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"深圳航空公司\""
    },
    {
        "question": "给出“深圳航空公司”航空公司航班的数量。",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"深圳航空公司\""
    },
    {
        "question": "有多少“南方航空”航空公司的航班飞往“虹桥”？",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"南方航空\" AND T2.DestAirport  =  \"虹桥\""
    },
    {
        "question": "统计“南方航空”航空公司航班抵达“虹桥”机场的数量。",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"南方航空\" AND T2.DestAirport  =  \"虹桥\""
    },
    {
        "question": "有多少“南方航空”航班从“浦东”机场起飞？",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"南方航空\" AND T2.SourceAirport  =  \"浦东\""
    },
    {
        "question": "返回从“浦东”机场起飞的“南方航空”航空公司航班的数量。",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"南方航空\" AND T2.SourceAirport  =  \"浦东\""
    },
    {
        "question": "有多少“南方航空”航空公司的航班飞往“哈尔滨”？",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"哈尔滨\" AND T3.Airline  =  \"南方航空\""
    },
    {
        "question": "统计到达“哈尔滨”的“南方航空”航空公司航班的数量。",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"哈尔滨\" AND T3.Airline  =  \"南方航空\""
    },
    {
        "question": "哪个城市有最多的抵达航班？",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪个城市有最频繁的目的地机场？",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪个城市离开的航班最多？",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪个城市的机场中起飞航班是最频繁的？",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "最多航班数的机场代码是多少？",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "航班数量最多的机场的代码是多少？",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "航班最少的机场代码是什么？",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1"
    },
    {
        "question": "给出最少的航班数的机场代码。",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1"
    },
    {
        "question": "哪家航空公司的航班最多？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪家航空公司提供最多的航班？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "找到航班最少的航空公司的缩写和国家。",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1"
    },
    {
        "question": "航班最少的航空公司的缩写是什么？它在哪个国家？",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1"
    },
    {
        "question": "哪些航空公司有从“浦东”机场出发的航班？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"浦东\""
    },
    {
        "question": "从“浦东”机场出发的航班的航空公司有哪些？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"浦东\""
    },
    {
        "question": "哪些航空公司有到达“浦东”机场的航班？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"浦东\""
    },
    {
        "question": "哪些航空公司有目的机场是“浦东”的航班？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"浦东\""
    },
    {
        "question": "找出有从“长沙”和“白云”机场出发的航班的所有航空公司。",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"长沙\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"白云\""
    },
    {
        "question": "哪些航空公司有从“长沙”和“白云”机场起飞的航班？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"长沙\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"白云\""
    },
    {
        "question": "找出有从“白云”机场出发，但不从“长沙”机场出发的航班的所有航空公司。",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"白云\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"长沙\""
    },
    {
        "question": "哪些航空公司有航班从“白云”起飞，而不是从“长沙”机场起飞？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"白云\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"长沙\""
    },
    {
        "question": "找出所有至少有10个航班的航空公司。",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10"
    },
    {
        "question": "哪家航空公司至少有10次航班？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10"
    },
    {
        "question": "找出所有少于200个航班的航空公司。",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
    },
    {
        "question": "哪些航空公司的航班少于200？",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
    },
    {
        "question": "“南方航空”航空公司的航班号是多少？",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"南方航空\""
    },
    {
        "question": "哪些航班号对应“南方航空”航空公司的航班？",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"南方航空\""
    },
    {
        "question": "从“长沙”机场起飞的航班的航班号是多少？",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"长沙\""
    },
    {
        "question": "给出从“长沙”起飞的航班的航班号。",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"长沙\""
    },
    {
        "question": "到达“长沙”机场的航班的航班号是多少？",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"长沙\""
    },
    {
        "question": "给出在“长沙”降落的航班的航班号。",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"长沙\""
    },
    {
        "question": "从“哈尔滨”起飞的航班的航班号是多少？",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "给出从“哈尔滨”起飞的航班的航班号。",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "到达“哈尔滨”市的航班的航班号是多少？",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "给出到达“哈尔滨”航班的航班号。",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"哈尔滨\""
    },
    {
        "question": "找出在“哈尔滨”或“长春”降落的航班的航班号。",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"哈尔滨\" OR T2.city  =  \"长春\""
    },
    {
        "question": "在“哈尔滨”或“长春”有多少航班？",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"哈尔滨\" OR T2.city  =  \"长春\""
    },
    {
        "question": "找出没有任何起落航班的机场名称。",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
    },
    {
        "question": "哪些机场没有起飞或到达的航班？",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
    },
    {
        "question": "那里有多少员工？",
        "query": "SELECT count(*) FROM employee"
    },
    {
        "question": "统计员工人数。",
        "query": "SELECT count(*) FROM employee"
    },
    {
        "question": "按年龄升序排列员工的姓名。",
        "query": "SELECT name FROM employee ORDER BY age"
    },
    {
        "question": "按年龄升序，列出员工姓名。",
        "query": "SELECT name FROM employee ORDER BY age"
    },
    {
        "question": "每个城市的雇员人数是多少？",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city"
    },
    {
        "question": "统计每个城市的雇员数量。",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city"
    },
    {
        "question": "哪些城市30岁以下的员工多于一个人？",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
    },
    {
        "question": "找出那些拥有不止一个30岁以下员工的城市。",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
    },
    {
        "question": "找出每个地方的商店的数量。",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"
    },
    {
        "question": "每个地方有多少商店？",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"
    },
    {
        "question": "找出产品数量最大的商店的经理姓名和所在地区。",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"
    },
    {
        "question": "销售数量最多的商店的经理姓名和地区是什么？",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"
    },
    {
        "question": "查找所有商店的最小和最大产品数量。",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop"
    },
    {
        "question": "所有商店的最小和最大产品数量是多少？",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop"
    },
    {
        "question": "按照产品数量的降序返回所有商店的名称、位置和区域。",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"
    },
    {
        "question": "按产品编号降序对所有商店进行排序，并返回每个商店的名称、位置和区域。",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"
    },
    {
        "question": "查找产品数量超过平均产品数量的商店的名称。",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"
    },
    {
        "question": "哪些商店的产品数量高于平均水平？把店名给我。",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"
    },
    {
        "question": "查找在评审中被奖励最多次数的员工的名字。",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪位员工在评审中获得最多奖项？给我员工的名字。",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "查找获得最高奖金的员工的名字。",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"
    },
    {
        "question": "哪位员工获得最大奖金？给我员工的名字。",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"
    },
    {
        "question": "找到那些从未在评审中获奖的员工的名字。",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"
    },
    {
        "question": "那些从未接受过评估的员工的名字是什么？",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"
    },
    {
        "question": "员工人数最多的商店名称是什么？",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪个商店的员工最多？把店名给我。",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "查询不雇佣任何雇员的商店名称。",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"
    },
    {
        "question": "哪些商店没有员工？查找店铺名称",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"
    },
    {
        "question": "查询每个商店雇佣的员工数量；并且显示商店名称。",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"
    },
    {
        "question": "对于每个商店，返回在那里工作的雇员人数和店名。",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"
    },
    {
        "question": "所有评审中给出的总奖金是多少？",
        "query": "SELECT sum(bonus) FROM evaluation"
    },
    {
        "question": "查询所有评审中所给出的奖金总额。",
        "query": "SELECT sum(bonus) FROM evaluation"
    },
    {
        "question": "给我有关招聘的所有信息。",
        "query": "SELECT * FROM hiring"
    },
    {
        "question": "招聘的所有信息是什么？",
        "query": "SELECT * FROM hiring"
    },
    {
        "question": "哪个地区有少于3000种产品的商店和多于10000种产品的商店？",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"
    },
    {
        "question": "查询那些既有卖不到3000件产品的商店又有卖超过1000件产品的商店的地区。",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"
    },
    {
        "question": "有多少个不同的商店位置？",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop"
    },
    {
        "question": "计算不同商店位置的数量。",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop"
    },
    {
        "question": "我们有多少份文件？",
        "query": "SELECT count(*) FROM Documents"
    },
    {
        "question": "计算文件的数量。",
        "query": "SELECT count(*) FROM Documents"
    },
    {
        "question": "列出所有文档的文档ID、文档名称和文档描述。",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents"
    },
    {
        "question": "所有文档的ID、名称和描述是什么？",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents"
    },
    {
        "question": "描述中带有字母“w”的文档名称和模板id是什么？",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"w\""
    },
    {
        "question": "返回描述中包含字母“w”的文档的名称和模板ID。",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"w\""
    },
    {
        "question": "“罗超的简历”文档的文档ID、模板id和描述是什么？",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"罗超的简历\""
    },
    {
        "question": "返回名称为“罗超的简历”的文档的文档ID、模板id和描述。",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"罗超的简历\""
    },
    {
        "question": "所有文档使用的不同模板有多少？",
        "query": "SELECT count(DISTINCT template_id) FROM Documents"
    },
    {
        "question": "计算文档中使用的不同模板的数量。",
        "query": "SELECT count(DISTINCT template_id) FROM Documents"
    },
    {
        "question": "有多少文档使用“PPT”类型的模板？",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'"
    },
    {
        "question": "计算使用“PPT”类型的模板的文档数。",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'"
    },
    {
        "question": "显示所有被使用的模板ID和每个模板被文档使用次数。",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id"
    },
    {
        "question": "文档中使用的所有不同的模板ID是什么，以及每个模板被使用了多少次？",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id"
    },
    {
        "question": "被文档使用次数最多的模板的ID和类型代码是什么？",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回被文档所使用次数最多的模板的ID和类型代码。",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示所有不止一次被文档使用的模板的ID。",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1"
    },
    {
        "question": "在不止一个文档中使用的模板的ID是什么？",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1"
    },
    {
        "question": "显示所有没被文档所使用过的模板的ID。",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
    },
    {
        "question": "在任何文档中都没被使用的模板的ID是什么？",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
    },
    {
        "question": "我们有多少模板？",
        "query": "SELECT count(*) FROM Templates"
    },
    {
        "question": "计算模板的数量。",
        "query": "SELECT count(*) FROM Templates"
    },
    {
        "question": "显示所有模板的ID、版本号和模板类型代码。",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates"
    },
    {
        "question": "每个模板的ID、版本号和类型代码是什么？",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates"
    },
    {
        "question": "显示所有不同的模板类型代码。",
        "query": "SELECT DISTINCT template_type_code FROM Templates"
    },
    {
        "question": "不同的模板类型代码是什么？",
        "query": "SELECT DISTINCT template_type_code FROM Templates"
    },
    {
        "question": "模板类型代码是“PP”或“PPT”的模板ID是什么？",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\""
    },
    {
        "question": "返回具有代码“PP”或“PPT”的模板的ID。",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\""
    },
    {
        "question": "有多少个模板的模板类型代码为“简历”？",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"简历\""
    },
    {
        "question": "计算“简历”类型的模板数。",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"简历\""
    },
    {
        "question": "版本号晚于5的模板的版本号和模板类型代码是什么？",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5"
    },
    {
        "question": "返回版本号大于5的模板的版本号和模板类型代码。",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5"
    },
    {
        "question": "显示所有模板类型代码和每个模板的模板数。",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code"
    },
    {
        "question": "不同的模板类型代码是什么，每个模板类型对应多少个模板？",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code"
    },
    {
        "question": "哪个模板类型代码对应的模板数量最多？",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回数量最多的模板所属的模板类型的类型代码。",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示少于三个模板的所有模板类型代码。",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3"
    },
    {
        "question": "少于3个模板的模板类型代码是什么？",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3"
    },
    {
        "question": "最小版本号及其模板类型代码是什么？",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates"
    },
    {
        "question": "返回最低版本号及其对应的模板类型代码。",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates"
    },
    {
        "question": "名称为“数据库”的文档所使用的模板的模板类型代码是什么？",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"数据库\""
    },
    {
        "question": "返回名为“数据库”的文档使用的模板的模板类型代码。",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"数据库\""
    },
    {
        "question": "显示所有使用模板类型代码为“BK”的文档名称。",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""
    },
    {
        "question": "使用模板代码为“BK”的文档的名称是什么？",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""
    },
    {
        "question": "显示所有模板类型代码和使用每个类型的文档的数量。",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code"
    },
    {
        "question": "不同的模板类型代码是什么？以及每个类型被多少个文档使用？",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code"
    },
    {
        "question": "哪种模板类型代码被文档使用的最多？",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回文档中最常用的模板类型的代码。",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示任何文档都没使用过的所有模板类型代码。",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
    },
    {
        "question": "任何文档都没使用过的的模板类型代码有哪些？",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
    },
    {
        "question": "显示所有模板类型代码和说明。",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types"
    },
    {
        "question": "所有模板类型的类型代码和描述是什么？",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types"
    },
    {
        "question": "模板类型代码“广告”的模板类型说明是什么？",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"广告\""
    },
    {
        "question": "返回模板类型代码是“广告”的模板类型描述。",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"广告\""
    },
    {
        "question": "模板类型描述是“书本”的模板类型代码是什么？",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"书本\""
    },
    {
        "question": "返回描述是“书”的模板类型的类型代码。",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"书本\""
    },
    {
        "question": "对于任何文档使用过的模板，都有哪些不同的模板类型描述？",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID"
    },
    {
        "question": "返回文档中使用过的模板的不同描述。",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID"
    },
    {
        "question": "模板类型描述是“演示”的模板ID是什么？",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"演示\""
    },
    {
        "question": "返回对应描述为“演示”的模板的ID。",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"演示\""
    },
    {
        "question": "总共有多少段落？",
        "query": "SELECT count(*) FROM Paragraphs"
    },
    {
        "question": "计算段落数。",
        "query": "SELECT count(*) FROM Paragraphs"
    },
    {
        "question": "名为“夏日游览”的文件有多少段落？",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  '夏日游览'"
    },
    {
        "question": "计算名为“夏日游览”的文件的段落数。",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  '夏日游览'"
    },
    {
        "question": "显示包含文本“韩文”的段落的详细内容。",
        "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  '韩文'"
    },
    {
        "question": "包含“韩文”一词的段落的详细内容是什么？",
        "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  '韩文'"
    },
    {
        "question": "显示名称为“欢迎来到纽约”的文件的所有段落ID和文本。",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  '上海欢迎你'"
    },
    {
        "question": "在名称为“欢迎来到纽约”的文件中，段落的ID和文本是什么？",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  '上海欢迎你'"
    },
    {
        "question": "显示名称为“客户评论”的文档的所有段落文本。",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"顾客评价\""
    },
    {
        "question": "名称为“客户评论”的文档中的段落文本是什么？",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"顾客评价\""
    },
    {
        "question": "按文件ID排序，显示所有文档ID和每个文档中的段落数。",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"
    },
    {
        "question": "按id排序，返回不同的文档id以及每个文档对应的段落数量。",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"
    },
    {
        "question": "显示所有文档ID、名称和每个文档中的段落数。",
        "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id"
    },
    {
        "question": "每个文档的id和名称是什么，以及每个文档中的段落数量是多少？",
        "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id"
    },
    {
        "question": "列出至少包含两个段落的所有文档的ID。",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2"
    },
    {
        "question": "有2个或更多段落的文档的ID是什么？",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2"
    },
    {
        "question": "段落数量最多的文档的ID和名称是什么？",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回拥有最多段落数量的文档的ID和名称。",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "段落数量最少的文档的ID是多少？",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "question": "返回段落数量最少的文档的ID。",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "question": "有1个或2个段落的文档ID是什么？",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2"
    },
    {
        "question": "给出包含一到两个段落的文档的ID。",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2"
    },
    {
        "question": "显示段落包含文本“巴西”和“爱尔兰”的文档的ID。",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  '巴西' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  '爱尔兰'"
    },
    {
        "question": "段落包含文本“巴西”和“爱尔兰”的文档的ID是什么？",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  '巴西' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  '爱尔兰'"
    },
    {
        "question": "有多少老师？",
        "query": "SELECT count(*) FROM teacher"
    },
    {
        "question": "教师总数是多少？",
        "query": "SELECT count(*) FROM teacher"
    },
    {
        "question": "按年龄递增顺序列出教师姓名。",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC"
    },
    {
        "question": "按照年龄递增排序，老师的姓名是什么？",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC"
    },
    {
        "question": "教师的年龄和家乡是什么？",
        "query": "SELECT Age ,  Hometown FROM teacher"
    },
    {
        "question": "每个老师的年龄和家乡是什么？",
        "query": "SELECT Age ,  Hometown FROM teacher"
    },
    {
        "question": "列出家乡不是“小杠杆市区”的教师的姓名。",
        "query": "SELECT Name FROM teacher WHERE Hometown != \"下城区\""
    },
    {
        "question": "家乡不是“小杠杆城区”的老师叫什么名字？",
        "query": "SELECT Name FROM teacher WHERE Hometown != \"下城区\""
    },
    {
        "question": "显示32岁或33岁的教师姓名。",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33"
    },
    {
        "question": "32岁或33岁的老师的名字是什么？",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33"
    },
    {
        "question": "最年轻的老师的家乡是哪里？",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1"
    },
    {
        "question": "最年轻的老师来自哪里？",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1"
    },
    {
        "question": "展示来自不同家乡的教师和来自每个家乡的教师数量。",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown"
    },
    {
        "question": "每一个家乡对应有多少老师？",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown"
    },
    {
        "question": "列出最常见的教师的家乡。",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "最常见的教师的家乡是哪里？",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "展示至少有两位老师来自的家乡。",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "question": "至少有两位教师来自的家乡是哪些？",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "question": "展示老师的名字和安排他们教的课程。",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID"
    },
    {
        "question": "每个老师的名字是什么？他们教什么课程？",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID"
    },
    {
        "question": "按照老师名字的字母升序排列，显示老师的名字和安排他们教的课程。",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name"
    },
    {
        "question": "将老师姓名按字母顺序升序排列，老师的姓名和他们教的课程是什么？",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name"
    },
    {
        "question": "展示数学课的老师的名字。",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"数学\""
    },
    {
        "question": "教数学课的老师的名字是什么？",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"数学\""
    },
    {
        "question": "显示教师姓名和他们教的课程数量。",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name"
    },
    {
        "question": "老师的名字是什么？他们教了多少门课？",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name"
    },
    {
        "question": "显示至少教两门课的教师的姓名。",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
    },
    {
        "question": "教至少两门课程的老师的名字是什么？",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
    },
    {
        "question": "列出没有被安排上课的老师的名字。",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)"
    },
    {
        "question": "没有被安排教课的老师的名字是什么？",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)"
    },
    {
        "question": "30岁以下的游客有多少？",
        "query": "SELECT count(*) FROM visitor WHERE age  <  30"
    },
    {
        "question": "查找会员级别高于4的游客的姓名，并将结果按级别从高到低排序。",
        "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC"
    },
    {
        "question": "会员级别不高于4的游客的平均年龄是多少？",
        "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4"
    },
    {
        "question": "查找会员级别高于4的游客的姓名和会员级别，并按年龄从高到低进行排序。",
        "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC"
    },
    {
        "question": "找到员工人数最多的博物馆的ID和名称？",
        "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1"
    },
    {
        "question": "查找在2009年之前开放的博物馆的平均工作人员数量。",
        "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009"
    },
    {
        "question": "名称是“国家艺术馆”的博物馆的开馆年和员工人数是多少？",
        "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  '国家艺术馆'"
    },
    {
        "question": "查找工作人员人数超过2010年后开馆的博物馆的最少工作人员人数的博物馆的名称。",
        "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)"
    },
    {
        "question": "找到不止一次参观博物馆的游客的id、姓名和年龄。",
        "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1"
    },
    {
        "question": "在所有的博物馆门票中，花钱最多的游客的id、姓名和会员级别是多少？",
        "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1"
    },
    {
        "question": "被参观次数最多的博物馆的ID和名称是什么时候？",
        "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "至今没有游客的博物馆叫什么名字？",
        "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)"
    },
    {
        "question": "找出一次买下最多票的游客的姓名和年龄。",
        "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1"
    },
    {
        "question": "在所有的游玩中，购买的平均票数和最大票数是多少？",
        "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit"
    },
    {
        "question": "会员级别为“1”的游客的门票总费用是多少？",
        "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1"
    },
    {
        "question": "既参观过2009年之前开放的博物馆又参观过2011年之后开放的博物馆的游客的名字是什么？",
        "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011"
    },
    {
        "question": "找到没有参观过2010年开放的博物馆的游客的人数。",
        "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)"
    },
    {
        "question": "2008年前或2013年后开放的博物馆有多少？",
        "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008"
    },
    {
        "question": "找出球员总数。",
        "query": "SELECT count(*) FROM players"
    },
    {
        "question": "有多少球员？",
        "query": "SELECT count(*) FROM players"
    },
    {
        "question": "找出比赛的总数。",
        "query": "SELECT count(*) FROM matches"
    },
    {
        "question": "计算比赛的数量。",
        "query": "SELECT count(*) FROM matches"
    },
    {
        "question": "列出来自国家代码为“中国”的所有球员的名字和生日。",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  '中国'"
    },
    {
        "question": "来自“中国”的选手的名字和出生日期是什么？",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  '中国'"
    },
    {
        "question": "找出所有比赛的失败者和胜利者的平均年龄。",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"
    },
    {
        "question": "所有比赛中输家和赢家的平均年龄是多少？",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"
    },
    {
        "question": "找出所有比赛中胜利者的平均排名。",
        "query": "SELECT avg(winner_rank) FROM matches"
    },
    {
        "question": "在所有比赛中胜利者平均排名是多少？",
        "query": "SELECT avg(winner_rank) FROM matches"
    },
    {
        "question": "找出所有比赛中失败者的最高排名。",
        "query": "SELECT min(loser_rank) FROM matches"
    },
    {
        "question": "在所有比赛中输家的最好的排名是多少？",
        "query": "SELECT min(loser_rank) FROM matches"
    },
    {
        "question": "找出所有球员所属的不同的国家代码的数量。",
        "query": "SELECT count(DISTINCT country_code) FROM players"
    },
    {
        "question": "球员来自多少个不同的国家？",
        "query": "SELECT count(DISTINCT country_code) FROM players"
    },
    {
        "question": "找出不同的失败者姓名的数量。",
        "query": "SELECT count(DISTINCT loser_name) FROM matches"
    },
    {
        "question": "失败者有多少不同的的名字？",
        "query": "SELECT count(DISTINCT loser_name) FROM matches"
    },
    {
        "question": "找到有超过10场比赛的联赛的名称。",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
    },
    {
        "question": "有超过10场比赛的联赛名称是什么？",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
    },
    {
        "question": "列出所有在2013年和2016年中获胜者的名字。",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016"
    },
    {
        "question": "在2013年和2016年中获胜的球员的名字是什么？",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016"
    },
    {
        "question": "列出所有在2013年或2016年中的比赛的数量。",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016"
    },
    {
        "question": "在2013年或2016年中有多少场比赛？",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016"
    },
    {
        "question": "在“WTA锦标赛”和“澳大利亚公开赛”中都取胜的球员的国家代码和名字是什么？",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA 锦标赛' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  '澳网'"
    },
    {
        "question": "获得“WTA锦标赛”和“澳大利亚公开赛冠军”的球员的名字和国家代码是什么？",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA 锦标赛' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  '澳网'"
    },
    {
        "question": "查找最老的球员的名字和国家代码。",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"
    },
    {
        "question": "最老的球员的名字和国家代码是什么？",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"
    },
    {
        "question": "按出生日期顺序列出所有球员的名字和姓氏。",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date"
    },
    {
        "question": "按出生日期排序，所有球员的全名是什么？",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date"
    },
    {
        "question": "按照出生日期的顺序列出左手球员的名字和姓氏。",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  '左' ORDER BY birth_date"
    },
    {
        "question": "根据出生日期顺序，所有左手球员的全名是什么？",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  '左' ORDER BY birth_date"
    },
    {
        "question": "找出巡回比赛次数最多的球员的名字和国家代码。",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
    },
    {
        "question": "巡回次数最多的球员的名字和国家代码是什么？",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
    },
    {
        "question": "找出比赛数量最多的一年。",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪一年的比赛最多？",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "找出获胜次数最多的获胜者的名字和排名积分。",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "赢得比赛最多的赢家的名字是什么？这些球员的排名积分是多少？",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "找出那些排名积分最高的并且参加过“澳大利亚公开赛”的获胜者的名字。",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  '澳网' ORDER BY winner_rank_points DESC LIMIT 1"
    },
    {
        "question": "参加“澳大利亚公开赛”的排名积分最高的获胜者叫什么名字？",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  '澳网' ORDER BY winner_rank_points DESC LIMIT 1"
    },
    {
        "question": "找出比赛时间最长的输家和赢家的名字。",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"
    },
    {
        "question": "比赛时间最长的胜利者和失败者的名字是什么？",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"
    },
    {
        "question": "找出每个球员的平均排名和他们的名字。",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "question": "所有球员的名字以及他们的平均排名是什么？",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "question": "找出每个球员的总排名得分和他们的名字。",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "question": "所有球员的名字，以及他们的总排名积分是什么？",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "question": "找出每个国家的球员数量。",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"
    },
    {
        "question": "每个国家有多少球员？",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"
    },
    {
        "question": "找到拥有球员数量最多的国家的代码。",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "拥有最多球员的国家的代码是什么？",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "找出拥有超过50名球员的国家的代码。",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"
    },
    {
        "question": "拥有超过50名球员的国家的代码是什么？",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"
    },
    {
        "question": "查找每个排名日期的巡回比赛的总数。",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date"
    },
    {
        "question": "每个排名日期总共有多少次巡回比赛？",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date"
    },
    {
        "question": "找出每年进行的比赛次数。",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR"
    },
    {
        "question": "每年有多少场比赛？",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR"
    },
    {
        "question": "找出所有比赛中3个最年轻的获胜者的名字和排名。",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"
    },
    {
        "question": "在所有比赛中，三个最年轻的获胜者的名字和等级是什么？",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"
    },
    {
        "question": "有多少不同的获胜者都参加了“WTA锦标赛”，并且都是左撇子？",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA 锦标赛' AND winner_hand  =  '左'"
    },
    {
        "question": "找出参加“WTA锦标赛”的左撇子获胜者的数目。",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA 锦标赛' AND winner_hand  =  '左'"
    },
    {
        "question": "找出在所有比赛中排名积分最高的获胜者的姓名、国家代码和生日。",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"
    },
    {
        "question": "在所有比赛中得分最高的选手的名字、国家代码和生日是什么？",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"
    },
    {
        "question": "找出每个手型的球员数。",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand"
    },
    {
        "question": "每一种手型有多少球员？",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand"
    },
    {
        "question": "有多少艘船最终被“俘虏”？",
        "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  '俘虏'"
    },
    {
        "question": "按名称的字母顺序降序列出名称和吨位。",
        "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC"
    },
    {
        "question": "列出每一场战斗的名称、日期和结果。",
        "query": "SELECT name ,  date FROM battle"
    },
    {
        "question": "每一次造成的最大和最小死亡人数是多少？",
        "query": "SELECT max(killed) ,  min(killed) FROM death"
    },
    {
        "question": "平均每次受伤次数是多少？",
        "query": "SELECT avg(injured) FROM death"
    },
    {
        "question": "吨位为“T”的船舶造成的伤亡事故是什么？",
        "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'"
    },
    {
        "question": "当保加利亚的指挥官不是“博瑞尔”时，战争的名称和结果是什么？",
        "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != '博瑞尔'"
    },
    {
        "question": "损失过“帆船”船只的战斗的不同的id和名称是什么？",
        "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  '帆船'"
    },
    {
        "question": "导致总共超过10人死亡的战斗的ID和名称是什么？",
        "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10"
    },
    {
        "question": "造成总伤害最多的船的ID和名称是什么？",
        "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "在保加利亚指挥官“卡洛扬”和拉丁指挥官“鲍德温一世”之间，有哪些不同的战斗名称？",
        "query": "SELECT name FROM battle WHERE bulgarian_commander  =  '卡洛扬' AND latin_commander  =  '鲍德温一世'"
    },
    {
        "question": "战斗共有多少不同的结果？",
        "query": "SELECT count(DISTINCT RESULT) FROM battle"
    },
    {
        "question": "有多少次战斗没有失去吨位为“225”的船只？",
        "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );"
    },
    {
        "question": "列出失去“远征”号和“长征号”号战舰的战斗的名称和日期。",
        "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  '远征' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  '长征号'"
    },
    {
        "question": "显示在“英吉利海峡”中没有船只损失的战斗的名称、结果和保加利亚指挥官。",
        "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  '英吉利海峡'"
    },
    {
        "question": "包含文本为“东”的死亡事件的注解是什么？",
        "query": "SELECT note FROM death WHERE note LIKE '东'"
    },
    {
        "question": "包括第一行和第二行的所有地址是什么？",
        "query": "SELECT line_1 ,  line_2 FROM addresses"
    },
    {
        "question": "所有地址的第一和第二行是什么？",
        "query": "SELECT line_1 ,  line_2 FROM addresses"
    },
    {
        "question": "总共列出了多少门课程？",
        "query": "SELECT count(*) FROM Courses"
    },
    {
        "question": "有多少门课？",
        "query": "SELECT count(*) FROM Courses"
    },
    {
        "question": "“数学”课程是怎样描述的？",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  '数学'"
    },
    {
        "question": "所有数学课程的描述是什么？",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  '数学'"
    },
    {
        "question": "“大连”城市的邮政编码是什么？",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  '大连'"
    },
    {
        "question": "“大连”的邮政编码是什么？",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  '大连'"
    },
    {
        "question": "哪个学院授予的学位最多？列出学院名称和ID。",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "对于每个学院ID，学位数目最多的学院的名称是什么？",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "有多少学院可以授予学位？",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs"
    },
    {
        "question": "有多少不同的学院可以授予学位？",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs"
    },
    {
        "question": "有多少个不同的学位名称？",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs"
    },
    {
        "question": "授予多少个不同的学位？",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs"
    },
    {
        "question": "“工程”学院提供多少学位？",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  '摄影师'"
    },
    {
        "question": "“工程”学院有多少学位？",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  '摄影师'"
    },
    {
        "question": "所有章节的名称和描述是什么？",
        "query": "SELECT section_name ,  section_description FROM Sections"
    },
    {
        "question": "所有章节的名称和描述是什么？",
        "query": "SELECT section_name ,  section_description FROM Sections"
    },
    {
        "question": "最多有2个章节的课程的名称和ID是什么？",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2"
    },
    {
        "question": "每个少于2个章节的课程的名字和ID是什么？",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2"
    },
    {
        "question": "以逆向词典顺序列出章节名称。",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC"
    },
    {
        "question": "按逆字母顺序排列的章节的名称是什么？",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC"
    },
    {
        "question": "最多学生注册的学期是哪一学期？显示名称和ID。",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "对于每个学期，注册学生最多的那个学期的名字和id是什么？",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "名字里含有子串为“计算机”的学院的描述是什么？",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '计算机'"
    },
    {
        "question": "那个名字里有“计算机”的学院的描述是什么？",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '计算机'"
    },
    {
        "question": "谁在一个学期内修读了2个学位课程？列出名字、中间名、姓氏和ID。",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2"
    },
    {
        "question": "在一学期内修读2个学位课程的所有学生的名字、中间名、姓氏和id是什么？",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2"
    },
    {
        "question": "谁在攻读“学士”学位课程？列出名字，中间名字，姓氏。",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  '本科'"
    },
    {
        "question": "申请“学士”学位的每个人的名字、中间名、姓氏是什么？",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  '本科'"
    },
    {
        "question": "找到最多数学生报名参加的项目？",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "申请学生人数最多的学位摘要名称是什么？",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "找出最多数学生报名参加的项目。列出ID和摘要。",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "最多数学生申请的学位的项目编号和学位摘要是什么？",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪些学生报名参加任何项目的次数最多？列出id、名字、中间名、姓氏、参加次数和学生id。",
        "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "参与任何一个课程次数最多的学生的姓名、中间名、姓氏、id和参与次数是多少？",
        "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪些学期没有录取学生？列出学期名称。",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
    },
    {
        "question": "没有学生入学的学期名称是什么？",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
    },
    {
        "question": "有学生参加过的所有课程的名称是什么？",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id"
    },
    {
        "question": "有学生注册过的所有课程的名称是什么？",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id"
    },
    {
        "question": "注册人数最多的课程名称是什么？",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "最多人数注册的课程名称是什么？",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "查找目前居住在“湖北”，但没有注册任何学位课程的学生的姓氏。",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  '湖北' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id"
    },
    {
        "question": "那些住在“湖北”但没有注册任何学位课程的学生的姓氏是什么？",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  '湖北' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id"
    },
    {
        "question": "显示至少包括2个课程成绩的成绩单的日期和id。",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2"
    },
    {
        "question": "至少有2个课程的成绩单的日期和id是什么？",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2"
    },
    {
        "question": "名字是“钟”、姓氏是“睿”的人的电话号码是多少？",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  '钟' AND last_name  =  '睿'"
    },
    {
        "question": "叫“钟睿”的学生的手机号码是多少？",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  '钟' AND last_name  =  '睿'"
    },
    {
        "question": "谁是第一个注册的学生？列出名字、中间名和姓氏。",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1"
    },
    {
        "question": "第一个注册的学生的名字、中间名和姓氏是什么？",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1"
    },
    {
        "question": "谁是学校最早毕业的学生？列出名字、中间名和姓氏。",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1"
    },
    {
        "question": "最早的学校毕业生的名字、中间名和姓氏是什么？",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1"
    },
    {
        "question": "谁的永久地址不同于他或她的当前地址？列出他或她的名字。",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id"
    },
    {
        "question": "永久地址与当前地址不同的学生的名字是什么？",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id"
    },
    {
        "question": "目前哪个地址包含的学生最多？列出地址ID和地址的第1行和第2行。",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "包含最多数学生的地址的ID、第1行和第2行是什么？",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "平均来说，成绩单是什么时候印的？",
        "query": "SELECT avg(transcript_date) FROM Transcripts"
    },
    {
        "question": "成绩单的平均日期是什么？",
        "query": "SELECT avg(transcript_date) FROM Transcripts"
    },
    {
        "question": "第一份成绩单是什么时候发布的？列出日期和细节。",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1"
    },
    {
        "question": "发布最早的成绩单的日期是什么？你能告诉我什么细节？",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1"
    },
    {
        "question": "发布多少成绩单？",
        "query": "SELECT count(*) FROM Transcripts"
    },
    {
        "question": "列出了多少个成绩单？",
        "query": "SELECT count(*) FROM Transcripts"
    },
    {
        "question": "最后一份成绩单发布日期是什么？",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1"
    },
    {
        "question": "最后一份成绩单是什么时候发布的？",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1"
    },
    {
        "question": "一个课程的注册结果最多能在不同的成绩单显示多少次？同时显示课程注册ID。",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "一个课程在不同成绩单中出现的最大次数是多少？该课程的注册号是多少？",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示成绩数量最少的成绩单的日期，并列出ID。",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "question": "成绩数量最少的成绩单的日期和id是什么？",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "question": "找到“硕士生”和“本科生”都有注册的那个学期。",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  '硕士' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  '本科'"
    },
    {
        "question": "同时招收了“硕士生”和“本科生”的学期的id是什么？",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  '硕士' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  '本科'"
    },
    {
        "question": "学生现在有多少不同的住址？",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students"
    },
    {
        "question": "学生现在居住的不同地址有哪些？",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students"
    },
    {
        "question": "按照字母顺序倒序列出所有学生的详细资料。",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC"
    },
    {
        "question": "按字母顺序逆序排列，你能告诉我学生其他的一些细节吗？",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC"
    },
    {
        "question": "描述“第三”章节。",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  '第三'"
    },
    {
        "question": "“第三”章节的描述是什么？",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  '第三'"
    },
    {
        "question": "找到永久居住在“海地”或手机电话号码是“09700166582”的学生的名字。",
        "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  '海地' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'"
    },
    {
        "question": "永久居住在“海地”或手机号码是“09700166582”的学生的名字是什么？",
        "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  '海地' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'"
    },
    {
        "question": "按字母顺序列出所有卡通的标题。",
        "query": "SELECT Title FROM Cartoon ORDER BY title"
    },
    {
        "question": "按字母顺序排列，卡通的标题是什么？",
        "query": "SELECT Title FROM Cartoon ORDER BY title"
    },
    {
        "question": "列出所有由“黄伟明”导演的卡通。",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"黄伟明\";"
    },
    {
        "question": "“黄伟明”导演的卡通作品的名字是什么？",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"黄伟明\";"
    },
    {
        "question": "“李辉”写了多少动画片？",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"李辉\";"
    },
    {
        "question": "“李辉”导演的动画片的数量是多少？",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"李辉\";"
    },
    {
        "question": "列出所有的卡通片的名字和他们的导演。",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date"
    },
    {
        "question": "按照播出日期排序，所有卡通的名字和导演是什么？",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date"
    },
    {
        "question": "列出“黄伟明”或“姜文”导演的所有卡通片的标题。",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"黄伟明\" OR Directed_by = \"姜文\";"
    },
    {
        "question": "“黄伟明”或“姜文”导演的卡通作品的标题是什么？",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"黄伟明\" OR Directed_by = \"姜文\";"
    },
    {
        "question": "哪个国家拥有最多的电视频道？列出这些国家和它们所拥有的电视频道的数量。",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "question": "电视频道最多的国家是什么？它们有多少个频道？",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "question": "列出电视频道表中不同的系列名称的数量和不同内容的数量。",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;"
    },
    {
        "question": "电视频道表中列出了多少个不同的系列和内容？",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;"
    },
    {
        "question": "电视频道播出的连续剧“潜伏”的内容是什么？",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"潜伏\";"
    },
    {
        "question": "连续剧“潜伏”的内容是什么？",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"潜伏\";"
    },
    {
        "question": "播出电视连续剧“潜伏”的电视频道的套餐选项是什么？",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"潜伏\";"
    },
    {
        "question": "包含了连续剧“潜伏”的电视频道有哪些套餐选择？",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"潜伏\";"
    },
    {
        "question": "有多少电视频道使用语言为“英语”？",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"英语\";"
    },
    {
        "question": "使用“英语”的电视频道有多少？",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"英语\";"
    },
    {
        "question": "列出使用语言数量最少的电视频道所使用的语言和这些电视频道的数量。",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "question": "电视频道使用的最少的语言是什么？有多少频道使用它？",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "question": "列出每种语言和使用它的电视频道的数量。",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"
    },
    {
        "question": "对于每种语言，列出使用它的电视频道的数量。",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"
    },
    {
        "question": "播放卡通“黑猫警长”的电视频道是什么？列出电视频道的连续剧的名称。",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"黑猫警长\";"
    },
    {
        "question": "放映卡通片“黑猫警长”的电视频道播放的连续剧名称是什么？",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"黑猫警长\";"
    },
    {
        "question": "列出播放连续剧“潜伏”的电视频道播出的卡通片名称。",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"潜伏\";"
    },
    {
        "question": "播放连续剧“潜伏”的电视频道播出的卡通片标题是什么？",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"潜伏\";"
    },
    {
        "question": "根据收视率排序列出所有电视剧剧集。",
        "query": "SELECT Episode FROM TV_series ORDER BY rating"
    },
    {
        "question": "按照收视率排序的所有剧集是什么？",
        "query": "SELECT Episode FROM TV_series ORDER BY rating"
    },
    {
        "question": "列出收视率排名前3位的电视剧。列出电视连续剧的剧集和收视率。",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"
    },
    {
        "question": "在电视连续剧表中收视率最高的3个是什么？收视率是多少？",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"
    },
    {
        "question": "电视剧的最小和最大份额是多少？",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"
    },
    {
        "question": "电视连续剧的最大和最小份额是多少？",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"
    },
    {
        "question": "电视剧的“大宅门”这一集的播出日期是什么时候？",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"大宅门\";"
    },
    {
        "question": "“大宅门”这一集是什么时候播出的？",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"大宅门\";"
    },
    {
        "question": "“一生的爱”这一集的每周排名是多少？",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"大宅门\";"
    },
    {
        "question": "“大宅门”这一集的每周排名是多少？",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"大宅门\";"
    },
    {
        "question": "电视连续剧剧集“大宅门”播出的电视频道是什么？列出这个电视频道的连续剧名称。",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"大宅门\";"
    },
    {
        "question": "包含“大宅门”这一集的电视剧所在的电视频道的连续剧的名字是什么？",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"大宅门\";"
    },
    {
        "question": "列出播出电视剧“潜伏”的电视频道所播出的所有电视剧的剧集。",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"潜伏\";"
    },
    {
        "question": "播出电视连续剧“潜伏”的电视频道的剧集是什么？",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"潜伏\";"
    },
    {
        "question": "找出每个列出来的导演所导演的卡通作品的数量。",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by"
    },
    {
        "question": "每个导演创作了多少动画片？",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by"
    },
    {
        "question": "找到最近播出的卡通片的制作代码和频道。",
        "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1"
    },
    {
        "question": "最新的动画片的制作代码和频道是什么？",
        "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1"
    },
    {
        "question": "找到高清晰度电视频道的套餐选择和系列节目名称。",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"确定\""
    },
    {
        "question": "支持高清电视的电视频道的套餐选项和系列节目名称是什么？",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"确定\""
    },
    {
        "question": "哪些国家的电视频道在播放“白英”写的漫画？",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  '白英'"
    },
    {
        "question": "在电视上播放“白英”写的漫画的国家有哪些？",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  '白英'"
    },
    {
        "question": "哪些国家的电视频道没有播放“白英”写的漫画？",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  '白英'"
    },
    {
        "question": "没有播放“白英”写的漫画的国家有哪些？",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  '白英'"
    },
    {
        "question": "找到正在播放由“黄伟明”和“杨洁”执导的卡通片的电视频道的系列名称和国家。",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  '杨洁' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  '黄伟明'"
    },
    {
        "question": "所有播放由“黄伟明”和“杨洁”导演的卡通片的电视频道的系列名称和国家是什么？",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  '杨洁' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  '黄伟明'"
    },
    {
        "question": "找出不使用“英语”的电视频道的像素纵横比和国家。",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != '英语'"
    },
    {
        "question": "不使用“英语”的所有电视频道的像素宽高比和国家是多少？",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != '英语'"
    },
    {
        "question": "有两个以上电视频道的国家的电视频道的ID。",
        "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2"
    },
    {
        "question": "拥有超过2个电视频道的所有电视频道的ID是什么？",
        "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2"
    },
    {
        "question": "找到没有播放“黄伟明”导演的卡通片的电视频道的ID。",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  '黄伟明'"
    },
    {
        "question": "没有播放“黄伟明”导演的卡通片的电视频道id是什么？",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  '黄伟明'"
    },
    {
        "question": "找到没有播放“黄伟明”导演的任何卡通片的电视频道的套餐选项。",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  '黄伟明')"
    },
    {
        "question": "目前没有播放“黄伟明”导演的卡通片的所有电视频道的套餐选择是什么？",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  '黄伟明')"
    },
    {
        "question": "有多少扑克玩家？",
        "query": "SELECT count(*) FROM poker_player"
    },
    {
        "question": "计算扑克玩家的数量。",
        "query": "SELECT count(*) FROM poker_player"
    },
    {
        "question": "按降序排列列出扑克玩家的收入。",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC"
    },
    {
        "question": "按价值降序排序的扑克玩家的收入是什么？",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC"
    },
    {
        "question": "列出决赛牌桌和扑克玩家的最佳表现。",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player"
    },
    {
        "question": "所有扑克玩家的决赛牌桌和最佳表现是什么？",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player"
    },
    {
        "question": "扑克玩家的平均收入是多少？",
        "query": "SELECT avg(Earnings) FROM poker_player"
    },
    {
        "question": "返回所有扑克玩家的平均收入。",
        "query": "SELECT avg(Earnings) FROM poker_player"
    },
    {
        "question": "收入最高的扑克玩家的财富级别是多少？",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1"
    },
    {
        "question": "返回收入最高的玩家的财富级别。",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1"
    },
    {
        "question": "在收入少于200000的扑克玩家中，决赛牌桌的最大数量是多少？",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000"
    },
    {
        "question": "返回所有收入低于200000的扑克玩家的决赛牌桌。",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000"
    },
    {
        "question": "扑克玩家的名字是什么？",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID"
    },
    {
        "question": "返回所有扑克玩家的名字。",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID"
    },
    {
        "question": "收入在300000以上的扑克玩家的名字是什么？",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000"
    },
    {
        "question": "给我收入在300000以上的扑克玩家的名字。",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000"
    },
    {
        "question": "列出按升序排列的决赛牌桌的扑克玩家的姓名。",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made"
    },
    {
        "question": "按照所在的决赛牌桌的数量升序排列的扑克玩家的姓名是什么？",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made"
    },
    {
        "question": "收入最低的扑克玩家的出生日期是什么？",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1"
    },
    {
        "question": "返回收入最低的扑克玩家的出生日期。",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1"
    },
    {
        "question": "身高最高的扑克玩家的财富等级是多少？",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
    },
    {
        "question": "返回身高最高的扑克玩家的财富等级。",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
    },
    {
        "question": "身高在200以上的扑克玩家的平均收入是多少？",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200"
    },
    {
        "question": "给出高于200的扑克玩家的平均收入。",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200"
    },
    {
        "question": "按照收入降序排列的扑克玩家的名字是什么？",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC"
    },
    {
        "question": "返回按照收入降序排列的扑克玩家的名字。",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC"
    },
    {
        "question": "有哪些不同的民族，来自每个民族的相应人数是多少？",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality"
    },
    {
        "question": "每个民族有多少人？",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality"
    },
    {
        "question": "最常见的国籍是什么？",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "给我在所有人中最常见的国籍。",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "至少有两个人共同所属的名族有哪些？",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2"
    },
    {
        "question": "返回有两个或更多人所属的国籍。",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2"
    },
    {
        "question": "按姓名的升序列出所有人的姓名和生日。",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC"
    },
    {
        "question": "按照名字的字母顺序排列，所有人的姓名和生日是什么？",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC"
    },
    {
        "question": "显示国籍不是“俄罗斯”的人的姓名。",
        "query": "SELECT Name FROM people WHERE Nationality != \"俄罗斯\""
    },
    {
        "question": "不是来自“俄罗斯”的人的名字是什么？",
        "query": "SELECT Name FROM people WHERE Nationality != \"俄罗斯\""
    },
    {
        "question": "列出不是扑克玩家的人的名字。",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)"
    },
    {
        "question": "不玩扑克的人的名字是什么？",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)"
    },
    {
        "question": "有多少个不同的民族？",
        "query": "SELECT count(DISTINCT Nationality) FROM people"
    },
    {
        "question": "统计不同民族的数量。",
        "query": "SELECT count(DISTINCT Nationality) FROM people"
    },
    {
        "question": "有多少州？",
        "query": "SELECT count(*) FROM area_code_state"
    },
    {
        "question": "按参赛者的姓名降序排列，列出参赛选手的编号和姓名。",
        "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC"
    },
    {
        "question": "列出投票ID、电话号码和所有投票的州。",
        "query": "SELECT vote_id ,  phone_number ,  state FROM votes"
    },
    {
        "question": "区域代码的最大值和最小值是多少？",
        "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state"
    },
    {
        "question": "“浙江”省最后的投票创建日期是什么时候？",
        "query": "SELECT max(created) FROM votes WHERE state  =  \"浙江\""
    },
    {
        "question": "那些名字不是“李红”的参赛者的名字是什么？",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name != \"李红\""
    },
    {
        "question": "不同的州和投票的开始时间是什么？",
        "query": "SELECT DISTINCT state ,  created FROM votes"
    },
    {
        "question": "至少有两张选票的参赛者号码和参赛者名字是什么？",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2"
    },
    {
        "question": "在所有得票的参赛者中，得票最少的参赛者的号码和名字是什么？",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "question": "来自“江苏”州或“浙江”州的票数是多少？",
        "query": "SELECT count(*) FROM votes WHERE state  =  \"江苏\" OR state  =  \"浙江\""
    },
    {
        "question": "有多少参赛者没有被投票？",
        "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )"
    },
    {
        "question": "最多选民投票的区号是多少？",
        "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "名字叫“王伟”的选手的选票创建日期、州和电话号码是什么？",
        "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  \"王伟\""
    },
    {
        "question": "列出既投票给选手“王伟”又投票给选手“王芳”的选民的地区代码。",
        "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  \"王伟\" INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  \"王芳\""
    },
    {
        "question": "返回名字中包含子字符串“勇”的参赛者的名字。",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%勇%\""
    },
    {
        "question": "1950年后所有独立的国家的名字是什么？",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950"
    },
    {
        "question": "说出1950后建立的国家的名字。",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950"
    },
    {
        "question": "有多少国家拥有“共和制”政体？",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"共和制\""
    },
    {
        "question": "有多少国家有“共和制”政府？",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"共和制\""
    },
    {
        "question": "“加勒比”地区国家的总表面积是多少？",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"加勒比\""
    },
    {
        "question": "在“加勒比”的国家的覆盖面积是多少？",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"加勒比\""
    },
    {
        "question": "“安圭拉”在哪个洲？",
        "query": "SELECT Continent FROM country WHERE Name  =  \"安圭拉\""
    },
    {
        "question": "“安圭拉”所在的大陆名称是什么？",
        "query": "SELECT Continent FROM country WHERE Name  =  \"安圭拉\""
    },
    {
        "question": "“温州市”的所在地是哪个地区？",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"温州市\""
    },
    {
        "question": "“温州市”在哪个地区？",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"温州市\""
    },
    {
        "question": "在“阿鲁巴”哪种语言最受欢迎？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"阿鲁巴\" ORDER BY Percentage DESC LIMIT 1"
    },
    {
        "question": "“阿鲁巴”主要讲什么语言？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"阿鲁巴\" ORDER BY Percentage DESC LIMIT 1"
    },
    {
        "question": "“巴西”的人口和预期寿命是多少？",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"巴西\""
    },
    {
        "question": "列举出“巴西”的人口数和预期寿命.",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"巴西\""
    },
    {
        "question": "“安哥拉”的所在区域和人口是多少？",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"安哥拉\""
    },
    {
        "question": "“安哥拉”属于哪个地区，人口是多少？",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"安哥拉\""
    },
    {
        "question": "“非洲”中部区域各国的平均预期寿命是多少？",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"非洲\""
    },
    {
        "question": "“非洲”中部的平均预期寿命是多少？?",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"非洲\""
    },
    {
        "question": "在“亚洲”预期寿命最短的国家是什么？",
        "query": "SELECT Name FROM country WHERE Continent  =  \"亚洲\" ORDER BY LifeExpectancy LIMIT 1"
    },
    {
        "question": "给出最短预期寿命的“亚洲”国家名称。",
        "query": "SELECT Name FROM country WHERE Continent  =  \"亚洲\" ORDER BY LifeExpectancy LIMIT 1"
    },
    {
        "question": "“亚洲”的总人口数和最大GNP是多少？",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"亚洲\""
    },
    {
        "question": "“亚洲”有多少人，其中最大的GNP是多少？",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"亚洲\""
    },
    {
        "question": "“非洲”“共和制”国家的平均预期寿命是多少？",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"非洲\" AND GovernmentForm  =  \"共和制\""
    },
    {
        "question": "给出“非洲”“共和制”国家的平均预期寿命",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"非洲\" AND GovernmentForm  =  \"共和制\""
    },
    {
        "question": "“亚洲”和“欧洲”大陆的总表面积是多少？",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"亚洲\" OR Continent  =  \"欧洲\""
    },
    {
        "question": "给出“亚洲”或“欧洲”国家覆盖的总表面积。",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"亚洲\" OR Continent  =  \"欧洲\""
    },
    {
        "question": "“西湖”区有多少人居住？",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"西湖\""
    },
    {
        "question": "“西湖”区的总人口是多少？",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"西湖\""
    },
    {
        "question": "政府为“美国属地”的国家的平均GNP和总人口是多少？",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"美国属地\""
    },
    {
        "question": "给出被认为是“美国属地”的国家的平均GNP和总人口。",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"美国属地\""
    },
    {
        "question": "世界上有多少种不同的语言？",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage"
    },
    {
        "question": "世界上使用的不同语言的数量是多少？",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage"
    },
    {
        "question": "“非洲”有多少种类型政府？",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"非洲\""
    },
    {
        "question": "“非洲”有多少种不同形式的政府？",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"非洲\""
    },
    {
        "question": "在“阿鲁巴”使用的语言总数是多少？",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"阿鲁巴\""
    },
    {
        "question": "在“阿鲁巴”说多少种语言？",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"阿鲁巴\""
    },
    {
        "question": "“阿富汗”有多少官方语言？",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"阿富汗\" AND IsOfficial  =  \"T\""
    },
    {
        "question": "“阿富汗”有几种官方语言？",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"阿富汗\" AND IsOfficial  =  \"T\""
    },
    {
        "question": "使用语言数量最多的国家的名字是什么？",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "给出使用最多语言数量的国家的名字。",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "哪一个大陆有最多不同种的语言？",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "哪个大陆讲的语言种类最多？",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "有多少国家既讲“英语”又讲“荷兰语”？",
        "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"荷兰语\")"
    },
    {
        "question": "使用“英语”和“荷兰语”的国家的数量是多少？",
        "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"荷兰语\")"
    },
    {
        "question": "既说“英语”又说“法语”的国家的名字是什么？",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"法语\""
    },
    {
        "question": "给出既说“英语”又说“法语”的国家的名字。",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"法语\""
    },
    {
        "question": "“英语”和“法语”都是官方语言的国家的名字是什么？",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"法语\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "question": "以“英语”和“法语”为官方语言的国家名称。",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"法语\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "question": "讲“汉语”的不同洲的数量是多少？",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"汉语\""
    },
    {
        "question": "有多少洲说“汉语”？",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"汉语\""
    },
    {
        "question": "使用“英语”或“荷兰语”的地区是什么？",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" OR T2.Language  =  \"荷兰语\""
    },
    {
        "question": "哪个地区讲“荷兰语”或“英语”？",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" OR T2.Language  =  \"荷兰语\""
    },
    {
        "question": "“英语”或“荷兰语”是官方语言的国家是什么？",
        "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"荷兰语\" AND IsOfficial  =  \"T\""
    },
    {
        "question": "哪些国家以“英语”或“荷兰语”作为官方语言？",
        "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"荷兰语\" AND IsOfficial  =  \"T\""
    },
    {
        "question": "“亚洲”大陆最流行哪种语言？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"亚洲\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1"
    },
    {
        "question": "“亚洲”国家中使用最多的语言是什么？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"亚洲\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1"
    },
    {
        "question": "只有一个“共和制”国家讲的语言是哪种语言？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"共和制\" GROUP BY T2.Language HAVING COUNT(*)  =  1"
    },
    {
        "question": "哪一种语言只由一个“共和制”政府的国家使用？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"共和制\" GROUP BY T2.Language HAVING COUNT(*)  =  1"
    },
    {
        "question": "找到使用“英语”的人口最多的城市。",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"英语\" ORDER BY T1.Population DESC LIMIT 1"
    },
    {
        "question": "说“英语”的人口最多的城市是什么？",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"英语\" ORDER BY T1.Population DESC LIMIT 1"
    },
    {
        "question": "找出面积最大的“亚洲”国家的名称、人口和预期寿命。",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"亚洲\" ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "question": "面积最大的“亚洲”国家的名称、人口和预期寿命是什么？",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"亚洲\" ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "question": "在“英语”不是官方语言的国家中，平均预期寿命是多少？",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" AND T2.IsOfficial  =  \"T\")"
    },
    {
        "question": "给出“英语”不“是”官方语言国家的平均预期寿命。",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\" AND T2.IsOfficial  =  \"T\")"
    },
    {
        "question": "生活在不使用“英语”的国家的总人数是多少？",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\")"
    },
    {
        "question": "有多少人生活在不讲“英语”的国家？",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"英语\")"
    },
    {
        "question": "国家元首是“布什”的国家的官方语言是什么？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "question": "国家元首是“布什”的国家使用的官方语言是什么？",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "question": "在1930年前建立的国家中，使用不同的官方语言的总数是多少？",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\""
    },
    {
        "question": "对于1930年以前成立的国家来说，不同官方语言的总数是多少？",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\""
    },
    {
        "question": "哪些国家的表面积比“欧洲”任何国家都大？",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"欧洲\")"
    },
    {
        "question": "面积比“欧洲”任何一个国家都大的是哪个国家？",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"欧洲\")"
    },
    {
        "question": "哪些“非洲”国家的人口比“亚洲”任何国家都少?",
        "query": "SELECT Name FROM country WHERE Continent  =  \"非洲\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"亚洲\")"
    },
    {
        "question": "人口比“亚洲”任何国家都少的“非洲”国家有哪些？",
        "query": "SELECT Name FROM country WHERE Continent  =  \"非洲\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"亚洲\")"
    },
    {
        "question": "哪些“亚洲”国家的人口比“非洲”任何一个国家都多？",
        "query": "SELECT Name FROM country WHERE Continent  =  \"亚洲\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"非洲\")"
    },
    {
        "question": "人口比“非洲”任何一个国家都多的“亚洲”国家有哪些？",
        "query": "SELECT Name FROM country WHERE Continent  =  \"亚洲\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"非洲\")"
    },
    {
        "question": "不讲“英语”的国家的国家代码是什么？",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"英语\""
    },
    {
        "question": "返回哪些不讲“英语”国家的国家代码。",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"英语\""
    },
    {
        "question": "人们使用“英语”以外的语言的国家的国家代码是什么？",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"英语\""
    },
    {
        "question": "给出那些不使用“英语”语言的国家的国家代码。",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"英语\""
    },
    {
        "question": "不讲“英语”且政府形式不是“共和制”的国家的国家代码有哪些？",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"共和制\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"英语\""
    },
    {
        "question": "返回那些不讲“英语”且没有“共和制”政府的国家的代码。",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"共和制\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"英语\""
    },
    {
        "question": "在“欧洲”国家，哪些城市不是以“英语”为官方语言？",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  \"欧洲\" AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  \"T\" AND T4.Language  =  \"英语\")"
    },
    {
        "question": "哪些“欧洲”国家的城市不把“英文”为其官方语言？",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  \"欧洲\" AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  \"T\" AND T4.Language  =  \"英语\")"
    },
    {
        "question": "在官方语言是“中文”的“亚洲”国家有哪些不同的城市？",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  \"T\" AND T2.Language  =  \"中文\" AND T1.Continent  =  \"亚洲\""
    },
    {
        "question": "返回在“亚洲”，以“中文”为官方语言的城市的不同名称。",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  \"T\" AND T2.Language  =  \"中文\" AND T1.Continent  =  \"亚洲\""
    },
    {
        "question": "人口最少的国家的名称、独立年份和表面积是多少？",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1"
    },
    {
        "question": "给出人口最少的国家的名称、独立年份和表面积。",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1"
    },
    {
        "question": "面积最大的国家的人口、名字和领导人是什么？",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "question": "给出面积最大的国家的名称、人口和领导人。",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "question": "返回至少使用3种语言的不同国家名称和语言数量。",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2"
    },
    {
        "question": "讲2种以上语言的国家的名称是什么，以及它们讲多少种语言？",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2"
    },
    {
        "question": "找出每个地区其人口大于城市平均人口的城市数量。",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District"
    },
    {
        "question": "每个地区有多少城市的人口高于所有城市的平均人口？",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District"
    },
    {
        "question": "找出每个平均预期寿命超过72岁的政府形式的名称及其对应的总人口。",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
    },
    {
        "question": "平均预期寿命大于72岁的政府形式及其总人口是多少？",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
    },
    {
        "question": "找出平均预期寿命短于72岁的每个大洲的平均预期寿命和总人口。",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
    },
    {
        "question": "对于平均预期寿命小于72的大洲，不同的大洲以及相应的人口总数和平均预期寿命是什么？",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
    },
    {
        "question": "世界排名前5大面积的国家的名称和国家地区是什么？",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"
    },
    {
        "question": "返回最大5个国家的名称和表面积。",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"
    },
    {
        "question": "人口前3多的国家的名字是什么？",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3"
    },
    {
        "question": "返回人口前3多的国家的名字。",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3"
    },
    {
        "question": "3个最少人口的国家的名字是什么？",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3"
    },
    {
        "question": "返回3个人口最少的国家的名字。",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3"
    },
    {
        "question": "“亚洲”有多少国家？",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"亚洲\""
    },
    {
        "question": "统计“亚洲”国家的数量。",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"亚洲\""
    },
    {
        "question": "“欧洲”大陆有“80000”人口的国家叫什么名字？",
        "query": "SELECT Name FROM country WHERE continent  =  \"欧洲\" AND Population  =  \"80000\""
    },
    {
        "question": "给出“欧洲”人口数是“80000”的国家的名字。",
        "query": "SELECT Name FROM country WHERE continent  =  \"欧洲\" AND Population  =  \"80000\""
    },
    {
        "question": "面积大于3000的“北美”洲国家的总人口数和平均表面积是多少？",
        "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"北美\" AND SurfaceArea  >  3000"
    },
    {
        "question": "给出面积大于3000的“北美”洲国家的总人口数和平均表面积。",
        "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"北美\" AND SurfaceArea  >  3000"
    },
    {
        "question": "人口在160000到900000之间的城市是什么？",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000"
    },
    {
        "question": "返回人口在160000到900000之间的城市的名字。",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000"
    },
    {
        "question": "那个语言被最多的国家使用？",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "给出最多国家使用的语言。",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "每个国家中最大比例的人所讲的语言是什么？",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode"
    },
    {
        "question": "不同国家的国家代码是什么？每个国家被最多数人讲的语言是什么？",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode"
    },
    {
        "question": "讲“西班牙语”的人口比例最大的国家的总数是多少？",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"西班牙语\" GROUP BY CountryCode"
    },
    {
        "question": "计算以讲“西班牙语”为主的国家的数目。",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"西班牙语\" GROUP BY CountryCode"
    },
    {
        "question": "讲“西班牙语”的人口比例最大的国家的代码是什么？",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"西班牙语\" GROUP BY CountryCode"
    },
    {
        "question": "返回以“西班牙语”为主的国家的代码。",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"西班牙语\" GROUP BY CountryCode"
    },
    {
        "question": "那里有多少个指挥家？",
        "query": "SELECT count(*) FROM conductor"
    },
    {
        "question": "计算指挥家的数量。",
        "query": "SELECT count(*) FROM conductor"
    },
    {
        "question": "列出按年限升序排列的指挥家的名字。",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC"
    },
    {
        "question": "按年龄顺序排列的指挥家名字是什么？",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC"
    },
    {
        "question": "国籍不是“美国”的指挥家的名字是什么？",
        "query": "SELECT Name FROM conductor WHERE Nationality != \"美国\""
    },
    {
        "question": "返回不是“美国”国籍的指挥人员的姓名。",
        "query": "SELECT Name FROM conductor WHERE Nationality != \"美国\""
    },
    {
        "question": "按创立年份的降序排列的管弦乐队唱片公司是哪些？",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC"
    },
    {
        "question": "返回按创立年份降序排列的乐团唱片公司的名称。",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC"
    },
    {
        "question": "表演的平均出席率是多少？",
        "query": "SELECT avg(Attendance) FROM SHOW"
    },
    {
        "question": "返回所有表演的平均出席率。",
        "query": "SELECT avg(Attendance) FROM SHOW"
    },
    {
        "question": "不是“决赛直播”类型的最大和最小份额的表现类型是什么。",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"决赛直播\""
    },
    {
        "question": "返回不是“决赛直播”类型的表演的最大和最小份额。",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"决赛直播\""
    },
    {
        "question": "指挥家有多少个不同的国籍？",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor"
    },
    {
        "question": "统计指挥家不同的国籍数量。",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor"
    },
    {
        "question": "按照工作年限的降序顺序列出指挥家的名字。",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC"
    },
    {
        "question": "按工作年限降序排列的指挥家的名字是什么？",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC"
    },
    {
        "question": "列出工作年限最长的指挥家的姓名。",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"
    },
    {
        "question": "那位工作时间最长的指挥家叫什么名字？",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"
    },
    {
        "question": "显示指挥家的名字和他们指挥的管弦乐队的名字。",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"
    },
    {
        "question": "指挥家的名字以及他们指挥的管弦乐队叫什么？",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"
    },
    {
        "question": "显示指挥过超过一支管弦乐队的指挥家的名字。",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1"
    },
    {
        "question": "指挥过超过一个管弦乐队的指挥家的名字是什么？",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1"
    },
    {
        "question": "显示指挥过最多的管弦乐队的指挥家的名字。",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "指挥过最多的管弦乐队的指挥家叫什么名字？",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "请显示指挥过2008年后成立的管弦乐队的指挥家姓名。",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008"
    },
    {
        "question": "指挥过2008年后成立的管弦乐队的指挥家叫什么名字？",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008"
    },
    {
        "question": "请显示不同唱片公司及相应管弦乐队的数量。",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company"
    },
    {
        "question": "每家唱片公司管理多少支管弦乐队？",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company"
    },
    {
        "question": "请以数量升序显示管弦乐队的唱片格式。",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC"
    },
    {
        "question": "按频率排列的管弦乐队的主要唱片格式是什么？",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC"
    },
    {
        "question": "列出被最多数量的管弦乐队共享的唱片公司。",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "管弦乐队使用最多的唱片公司是什么？",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "列出没有演出过的管弦乐队的名称。",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)"
    },
    {
        "question": "没有演出的管弦乐队是什么？",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)"
    },
    {
        "question": "显示2003年前和2003年后成立的管弦乐队所共享的唱片公司。",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003"
    },
    {
        "question": "2003年之前成立的和2003年以后成立的乐团都使用的唱片公司有哪些？",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003"
    },
    {
        "question": "找到记录格式为“CD”或“DVD”的管弦乐队的数量。",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\""
    },
    {
        "question": "计算以“CD”或“DVD”作为记录格式的管弦乐队的数量。",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\""
    },
    {
        "question": "显示不止一次演出的管弦乐队成立的年份。",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1"
    },
    {
        "question": "拥有超过一次演出经历的管弦乐队的创立年份是什么？",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1"
    },
    {
        "question": "有多少高中生？",
        "query": "SELECT count(*) FROM Highschooler"
    },
    {
        "question": "统计高中生的人数。",
        "query": "SELECT count(*) FROM Highschooler"
    },
    {
        "question": "显示每个高中学生的姓名和年级。",
        "query": "SELECT name ,  grade FROM Highschooler"
    },
    {
        "question": "每个高中生的名字和年级是什么？",
        "query": "SELECT name ,  grade FROM Highschooler"
    },
    {
        "question": "显示所有高中生的年级。",
        "query": "SELECT grade FROM Highschooler"
    },
    {
        "question": "每个高中生的年级是多少？",
        "query": "SELECT grade FROM Highschooler"
    },
    {
        "question": "“小军”在几年级？",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"小军\""
    },
    {
        "question": "返回高中生“小军”的年级。",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"小军\""
    },
    {
        "question": "显示10年级所有高中生的名字。",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10"
    },
    {
        "question": "10年级所有高中生的名字是什么？",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10"
    },
    {
        "question": "显示名字叫“小军”的高中学生的ID。",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"小军\""
    },
    {
        "question": "“小军”的id是什么？",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"小军\""
    },
    {
        "question": "9年级或10年级有多少高中生？",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10"
    },
    {
        "question": "计算9年级或10年级的高中生人数。",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10"
    },
    {
        "question": "显示每个年级的高中生人数。",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade"
    },
    {
        "question": "每个年级有多少高中生？",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade"
    },
    {
        "question": "哪个年级的学生最多？",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回高中人数最多的年级。",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示所有至少有4名学生的年级。",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4"
    },
    {
        "question": "哪一个年级有4个或更多的高中生？",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4"
    },
    {
        "question": "显示学生ID和其对应的朋友数量。",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id"
    },
    {
        "question": "每个学生有多少个朋友？",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id"
    },
    {
        "question": "显示高中生的名字和他们相应的朋友数量。",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "question": "高中生的名字是什么，每个人有多少朋友？",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "question": "拥有最多人数朋友的高中生的名字是什么？",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回有最多朋友数量的高中生的名字。",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示至少有3个朋友的高中生的名字。",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3"
    },
    {
        "question": "有3个或更多朋友的高中生的名字是什么？",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3"
    },
    {
        "question": "显示高中学生“小军”的所有朋友的名字。",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"小军\""
    },
    {
        "question": "返回名字是“小军”高中学生的朋友的名字。",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"小军\""
    },
    {
        "question": "高中生“小军”有多少个朋友？",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"小军\""
    },
    {
        "question": "统计下“小军”的朋友数。",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"小军\""
    },
    {
        "question": "显示所有没有朋友的学生的id。",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend"
    },
    {
        "question": "没有朋友的高中生的id是什么？",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend"
    },
    {
        "question": "显示所有没有任何朋友的高中生的名字。",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
    },
    {
        "question": "没有朋友的学生的名字是什么？",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
    },
    {
        "question": "展示一下那些有朋友而且被别人喜欢的高中生的id。",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes"
    },
    {
        "question": "既有朋友又被人喜欢的学生的id是什么？",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes"
    },
    {
        "question": "显示所有有朋友和被别人喜欢的学生的名字。",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"
    },
    {
        "question": "那些既有朋友又有人喜欢的高中生的名字是什么？",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"
    },
    {
        "question": "针对每个学生ID，统计其对应的喜欢数量。",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id"
    },
    {
        "question": "有每个学生id对应的喜欢数有多少？",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id"
    },
    {
        "question": "显示有喜欢的高中学生的名字，以及每个人喜欢的数量。",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "question": "有喜欢的高中生叫什么名字？每人有多少喜欢的？",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "question": "有最多喜欢数的高中生叫什么名字？",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "给出有最多喜欢数的学生的名字。",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "显示至少有2个喜欢的学生的名字。",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "question": "有2个或更多喜欢的学生的名字是什么？",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "question": "显示年级高于5级且至少有2个朋友的学生的名字。",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "question": "那些年级在5岁以上且有2个或更多朋友的高中生叫什么名字？",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "question": "“小军”有多少喜欢？",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"小军\""
    },
    {
        "question": "返回高中生“小军”的喜欢数。",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"小军\""
    },
    {
        "question": "找出所有有朋友的学生的平均年级。",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "question": "有朋友的学生的平均年级是多少？",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "question": "找出没有朋友的学生的最低年级。",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "question": "没有任何朋友的最低年级学生是谁？",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "question": "哪些州既有主人又有专家居住？",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
    },
    {
        "question": "找出既有主人又有专家居住的州。",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
    },
    {
        "question": "经过治疗的狗的平均年龄是多少？",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "question": "找出经过治疗的狗的平均年龄。",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "question": "哪些专家住在印第安纳州，或者已经做过两次以上的治疗？列出他或她的ID、姓和手机。",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  \"Indiana\" UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2"
    },
    {
        "question": "找出居住在印第安纳州且曾做过两次以上治疗的专家的ID、姓氏和手机。",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  \"Indiana\" UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2"
    },
    {
        "question": "哪些狗没有花费他们的主人超过1000元的治疗费？列出狗的名字。",
        "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )"
    },
    {
        "question": "主人花了1000元以上来治疗的狗的名字是什么？",
        "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )"
    },
    {
        "question": "哪些名字可用于专家或主人，但不用作狗的名字？",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"
    },
    {
        "question": "找出专业人士或主人使用的名字，但不用作狗名的名字。",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"
    },
    {
        "question": "哪些专家没有对狗进行任何治疗？列出专业人员的id、角色和电子邮件。",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "question": "请告诉我没有对狗进行任何治疗的专家的id、角色和电子邮件。",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "question": "那个主人拥有最多的狗？列出主人的ID、名字和姓氏。",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "返回拥有最多狗的主人的ID、名字和姓氏。",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪些专家至少做过两次治疗？列出专业人员的ID、角色和名字。",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "question": "进行过两次或更多次治疗的专家的ID、角色和名字是什么？",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "question": "被养最多数量狗的品种名称叫什么？",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "被喂养最多数量的狗都有哪些品种？给我这个品种的名字。",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "哪一位主人为他或她的狗支付了最多的治疗费？列出主人的ID和姓氏。",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "告诉我花在他或她的狗身上最多治疗费的主人的ID和姓氏。",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "question": "总花费最少的治疗类型的描述是什么？",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1"
    },
    {
        "question": "请给我描述一下总花费最低的治疗类型。",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1"
    },
    {
        "question": "哪一个主人为他们的狗支付了最多的钱？显示主人的ID和邮政编码。",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
    },
    {
        "question": "找出总计为他或她的狗花了最多钱的主人的ID和邮政编码。",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
    },
    {
        "question": "哪些专家至少做过两种治疗？列出他们的专业ID和手机号码。",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "question": "找出做过两种或更多种治疗的专业人员的ID和手机号码。",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "question": "治疗费用低于平均的专家的名字和姓氏是什么？",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )"
    },
    {
        "question": "哪些专家的治疗费用低于平均水平？给出名字和姓氏。",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )"
    },
    {
        "question": "列出每个治疗的日期，以及操作它的专业人员的名字。",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "question": "每次治疗的日期和操作专业人员的名字是什么？",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "question": "列出每种治疗的费用和相应的治疗类型描述。",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code"
    },
    {
        "question": "每个治疗的费用和治疗类型描述是什么？",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code"
    },
    {
        "question": "列出每个主人的名字、姓氏和他的狗的大小。",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "question": "每个主人的名字、姓氏和他们的狗的大小是什么？",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "question": "列出主人的名字和狗的名字对。",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "question": "每个主人的名字和他们的狗的名字是什么？",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "question": "列出最稀有品种的狗的名字和它们的治疗日期。",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
    },
    {
        "question": "哪种狗最稀有？显示他们的名字和治疗日期。",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
    },
    {
        "question": "哪些狗是在“山西”的人拥有的？列出主人的名字和狗的名字。",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  \"山西\""
    },
    {
        "question": "找出居住在“山西”的主人的名字和他们拥有的狗的名字。",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  \"山西\""
    },
    {
        "question": "接受治疗的狗的住院日期和出院日期是什么？",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id"
    },
    {
        "question": "找出接受治疗的狗的住院日期和出院日期。",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id"
    },
    {
        "question": "列出拥有年纪最小的狗的主人的姓氏。",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"
    },
    {
        "question": "谁拥有年纪最小的狗？给我他或她的姓氏。",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"
    },
    {
        "question": "列出居住在“台湾”省或“福建”省的专家的电子邮件。",
        "query": "SELECT email_address FROM Professionals WHERE state  =  \"台湾\" OR state  =  \"福建\""
    },
    {
        "question": "居住在“台湾”省或“福建”省的专家的电子邮件是什么？",
        "query": "SELECT email_address FROM Professionals WHERE state  =  \"台湾\" OR state  =  \"福建\""
    },
    {
        "question": "所有狗的住院日期和出院日期是什么？",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs"
    },
    {
        "question": "列出所有狗的住院日期和出院日期。",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs"
    },
    {
        "question": "有多少狗经过治疗？",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments"
    },
    {
        "question": "计算经过治疗的狗的数量。",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments"
    },
    {
        "question": "有多少专家对狗进行过治疗？",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments"
    },
    {
        "question": "找出曾经治疗过狗的专业人员的数量。",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments"
    },
    {
        "question": "哪些专家居住在一个包含“西”字的城市？列出他或她的角色，街道，城市和州。",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE \"%西%\""
    },
    {
        "question": "找出居住在包含子字符串“西”的城市的专家的角色，街道，城市和州。",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE \"%西%\""
    },
    {
        "question": "哪些主人居住在名称中包含子字符串“北”的州？列出他的名字、姓氏和电子邮件。",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE \"%北%\""
    },
    {
        "question": "返回居住在名称包含子字符串“北”的州的所有者的姓氏、姓氏和电子邮件。",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE \"%北%\""
    },
    {
        "question": "有多少狗的年龄低于平均年龄？",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )"
    },
    {
        "question": "计算年龄低于平均的狗的数量。",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )"
    },
    {
        "question": "最近的治疗费用是多少？",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"
    },
    {
        "question": "给我看看最近执行的治疗费用。",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"
    },
    {
        "question": "有多少狗没有经过任何治疗？",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "question": "告诉我接受治疗的狗的数量。",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "question": "有多少主人暂时没有狗？",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )"
    },
    {
        "question": "找到在现在不拥有任何狗的主人。",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )"
    },
    {
        "question": "有多少专家没有对狗进行任何治疗？",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )"
    },
    {
        "question": "找出没有治疗过狗的专家的数量。",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )"
    },
    {
        "question": "列出被遗弃的狗的名字、年龄和体重。1代表是，0代表不。",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"
    },
    {
        "question": "被遗弃的狗的名字、年龄和体重是多少？注意在表中1表示是，0表示不。",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"
    },
    {
        "question": "所有狗的平均年龄是多少？",
        "query": "SELECT avg(age) FROM Dogs"
    },
    {
        "question": "计算所有狗的平均年龄。",
        "query": "SELECT avg(age) FROM Dogs"
    },
    {
        "question": "最老的狗的年龄是多少？",
        "query": "SELECT max(age) FROM Dogs"
    },
    {
        "question": "告诉我最老的狗的年龄。",
        "query": "SELECT max(age) FROM Dogs"
    },
    {
        "question": "每个收费类型要多少钱？列出费用类型及其金额。",
        "query": "SELECT charge_type ,  charge_amount FROM Charges"
    },
    {
        "question": "列出每个费用类型及其金额。",
        "query": "SELECT charge_type ,  charge_amount FROM Charges"
    },
    {
        "question": "最贵的收费类型要多少钱？",
        "query": "SELECT max(charge_amount) FROM Charges"
    },
    {
        "question": "最贵的收费类型的金额是多少？",
        "query": "SELECT max(charge_amount) FROM Charges"
    },
    {
        "question": "列出所有专家的电子邮件、手机号码和家庭电话。",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals"
    },
    {
        "question": "每个专家的电子邮件、手机号码和家庭电话是什么？",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals"
    },
    {
        "question": "所有品种类型和大小的组合是什么？",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs"
    },
    {
        "question": "找出不同的狗品种类型和体型的组合。",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs"
    },
    {
        "question": "列出所有专家的名字以及他们已经做治疗的描述。",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
    },
    {
        "question": "每个专家的名字和所实施的治疗的描述是什么？",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
    },
    {
        "question": "有多少歌手？",
        "query": "SELECT count(*) FROM singer"
    },
    {
        "question": "歌手的总数是多少？",
        "query": "SELECT count(*) FROM singer"
    },
    {
        "question": "按净资产升序排列歌手姓名。",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC"
    },
    {
        "question": "按净资产升序排序的歌手的名字是什么？",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC"
    },
    {
        "question": "歌手的出生年份和国籍是什么？",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer"
    },
    {
        "question": "歌手的出生年份和国籍是什么？",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer"
    },
    {
        "question": "列出国籍不是“巴黎”的歌手的名字。",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"巴黎\""
    },
    {
        "question": "那些不是“法国”公民的歌手的名字是什么？",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"法国\""
    },
    {
        "question": "显示出生年份是1948年或1949年的歌手的名字",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949"
    },
    {
        "question": "1948年或1949年出生的歌手的名字是什么？",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949"
    },
    {
        "question": "拥有最大净资产的歌手叫什么名字？",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1"
    },
    {
        "question": "最富裕的歌手叫什么名字？",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1"
    },
    {
        "question": "显示歌手的不同国籍和每个国籍的歌手人数。",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"
    },
    {
        "question": "对于每一个国籍，有多少歌手来自那个国家？",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"
    },
    {
        "question": "请显示歌手最常见的国籍。",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "歌手最常见的国籍是什么？",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "question": "显示不同的国籍和每个国籍歌手的最大净资产。",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
    },
    {
        "question": "对于每个国籍来说，最大的净资产是多少？",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
    },
    {
        "question": "显示歌曲名和歌手的名字。",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID"
    },
    {
        "question": "歌曲名和歌手名字是什么？",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID"
    },
    {
        "question": "显示销量超过300000首的不同歌手的名字。",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000"
    },
    {
        "question": "销售超过300000的歌手的不同的名字是什么？",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000"
    },
    {
        "question": "显示有不止一首歌曲的歌手的名字。",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
    },
    {
        "question": "那些有不止一首歌的歌手的名字是什么？",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
    },
    {
        "question": "显示歌手的名字和他们的歌曲的总销售。",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name"
    },
    {
        "question": "对于每个歌手的名字，他们的歌曲的总销量是多少？",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name"
    },
    {
        "question": "列出没有歌曲的歌手的名字。",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"
    },
    {
        "question": "没有任何歌曲的歌手的名字是什么？",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"
    },
    {
        "question": "显示1945年前和1955年后出生的歌手所共有的国籍。",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955"
    },
    {
        "question": "在1945年之前和1955年之后出生的歌手所共有的国籍是什么？",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955"
    },
    {
        "question": "一共有多少个可用的特性？",
        "query": "SELECT count(*) FROM Other_Available_Features"
    },
    {
        "question": "“春秋航空公司”的特征类型名称是什么？",
        "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"春秋航空公司\""
    },
    {
        "question": "显示属于该代码的属性的属性类型说明。",
        "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code"
    },
    {
        "question": "超过1个房间的“房子”或“公寓”的属性名称是什么？",
        "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"房子\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"公寓\" AND room_count  >  1"
    }
]